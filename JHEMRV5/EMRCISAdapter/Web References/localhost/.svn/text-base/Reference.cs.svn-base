//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.42
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.42 版自动生成。
// 
#pragma warning disable 1591

namespace EMRCISAdapter.localhost {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmrServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class EmrService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestDBConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrAccountValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetEncodingPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroDeptDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroICDCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroBedDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOperationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroAdtLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroNewPatOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOnePatOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroNewPatMZOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOutPatOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderTypeDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderItemDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderDataSetByPatentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatTotalPayMentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatBasicInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetLabDataSetByPatentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetLabReportDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetLabItemResultQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetExamMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetExamReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetExamAppointOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetGeneralSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGenralDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGenralStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrBackupOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmrService() {
            this.Url = global::EMRCISAdapter.Properties.Settings.Default.EMRCISAdapter_localhost_EmrService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event TestDBConnectionCompletedEventHandler TestDBConnectionCompleted;
        
        /// <remarks/>
        public event EmrAccountValidateCompletedEventHandler EmrAccountValidateCompleted;
        
        /// <remarks/>
        public event EmrGetEncodingPasswordCompletedEventHandler EmrGetEncodingPasswordCompleted;
        
        /// <remarks/>
        public event EmrSynchroDictCompletedEventHandler EmrSynchroDictCompleted;
        
        /// <remarks/>
        public event EmrSynchroDeptDictCompletedEventHandler EmrSynchroDeptDictCompleted;
        
        /// <remarks/>
        public event EmrSynchroICDCodeCompletedEventHandler EmrSynchroICDCodeCompleted;
        
        /// <remarks/>
        public event EmrSynchroBedDictCompletedEventHandler EmrSynchroBedDictCompleted;
        
        /// <remarks/>
        public event EmrSynchroOperationCodeCompletedEventHandler EmrSynchroOperationCodeCompleted;
        
        /// <remarks/>
        public event EmrSynchroUsersCompletedEventHandler EmrSynchroUsersCompleted;
        
        /// <remarks/>
        public event EmrSynchroAdtLogCompletedEventHandler EmrSynchroAdtLogCompleted;
        
        /// <remarks/>
        public event EmrSynchroNewPatCompletedEventHandler EmrSynchroNewPatCompleted;
        
        /// <remarks/>
        public event EmrSynchroOnePatCompletedEventHandler EmrSynchroOnePatCompleted;
        
        /// <remarks/>
        public event EmrSynchroNewPatMZCompletedEventHandler EmrSynchroNewPatMZCompleted;
        
        /// <remarks/>
        public event EmrSynchroOutPatCompletedEventHandler EmrSynchroOutPatCompleted;
        
        /// <remarks/>
        public event EmrGetOrderTypeDictCompletedEventHandler EmrGetOrderTypeDictCompleted;
        
        /// <remarks/>
        public event EmrGetOrderItemDictCompletedEventHandler EmrGetOrderItemDictCompleted;
        
        /// <remarks/>
        public event EmrGetOrderDataSetCompletedEventHandler EmrGetOrderDataSetCompleted;
        
        /// <remarks/>
        public event EmrGetOrderDataSetByPatentIDCompletedEventHandler EmrGetOrderDataSetByPatentIDCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatOrderCompletedEventHandler EmrSynchroPatOrderCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatTotalPayMentsCompletedEventHandler EmrSynchroPatTotalPayMentsCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatBasicInfoCompletedEventHandler EmrSynchroPatBasicInfoCompleted;
        
        /// <remarks/>
        public event EmrGetLabDataSetByPatentIDCompletedEventHandler EmrGetLabDataSetByPatentIDCompleted;
        
        /// <remarks/>
        public event EmrGetLabReportDataSetCompletedEventHandler EmrGetLabReportDataSetCompleted;
        
        /// <remarks/>
        public event EmrGetLabItemResultQueryCompletedEventHandler EmrGetLabItemResultQueryCompleted;
        
        /// <remarks/>
        public event EmrGetExamMasterCompletedEventHandler EmrGetExamMasterCompleted;
        
        /// <remarks/>
        public event EmrGetExamReportCompletedEventHandler EmrGetExamReportCompleted;
        
        /// <remarks/>
        public event EmrGetExamAppointCompletedEventHandler EmrGetExamAppointCompleted;
        
        /// <remarks/>
        public event EmrGetGeneralSQLCompletedEventHandler EmrGetGeneralSQLCompleted;
        
        /// <remarks/>
        public event EmrGenralDataSetCompletedEventHandler EmrGenralDataSetCompleted;
        
        /// <remarks/>
        public event EmrGenralStrCompletedEventHandler EmrGenralStrCompleted;
        
        /// <remarks/>
        public event EmrBackupCompletedEventHandler EmrBackupCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestDBConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestDBConnection() {
            object[] results = this.Invoke("TestDBConnection", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestDBConnectionAsync() {
            this.TestDBConnectionAsync(null);
        }
        
        /// <remarks/>
        public void TestDBConnectionAsync(object userState) {
            if ((this.TestDBConnectionOperationCompleted == null)) {
                this.TestDBConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestDBConnectionOperationCompleted);
            }
            this.InvokeAsync("TestDBConnection", new object[0], this.TestDBConnectionOperationCompleted, userState);
        }
        
        private void OnTestDBConnectionOperationCompleted(object arg) {
            if ((this.TestDBConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestDBConnectionCompleted(this, new TestDBConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrAccountValidate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrAccountValidate(string strUserID, string strUSERPWD, string strWKStation) {
            object[] results = this.Invoke("EmrAccountValidate", new object[] {
                        strUserID,
                        strUSERPWD,
                        strWKStation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrAccountValidateAsync(string strUserID, string strUSERPWD, string strWKStation) {
            this.EmrAccountValidateAsync(strUserID, strUSERPWD, strWKStation, null);
        }
        
        /// <remarks/>
        public void EmrAccountValidateAsync(string strUserID, string strUSERPWD, string strWKStation, object userState) {
            if ((this.EmrAccountValidateOperationCompleted == null)) {
                this.EmrAccountValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrAccountValidateOperationCompleted);
            }
            this.InvokeAsync("EmrAccountValidate", new object[] {
                        strUserID,
                        strUSERPWD,
                        strWKStation}, this.EmrAccountValidateOperationCompleted, userState);
        }
        
        private void OnEmrAccountValidateOperationCompleted(object arg) {
            if ((this.EmrAccountValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrAccountValidateCompleted(this, new EmrAccountValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetEncodingPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGetEncodingPassword(string strUserID, string strUSERPWD) {
            object[] results = this.Invoke("EmrGetEncodingPassword", new object[] {
                        strUserID,
                        strUSERPWD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetEncodingPasswordAsync(string strUserID, string strUSERPWD) {
            this.EmrGetEncodingPasswordAsync(strUserID, strUSERPWD, null);
        }
        
        /// <remarks/>
        public void EmrGetEncodingPasswordAsync(string strUserID, string strUSERPWD, object userState) {
            if ((this.EmrGetEncodingPasswordOperationCompleted == null)) {
                this.EmrGetEncodingPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetEncodingPasswordOperationCompleted);
            }
            this.InvokeAsync("EmrGetEncodingPassword", new object[] {
                        strUserID,
                        strUSERPWD}, this.EmrGetEncodingPasswordOperationCompleted, userState);
        }
        
        private void OnEmrGetEncodingPasswordOperationCompleted(object arg) {
            if ((this.EmrGetEncodingPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetEncodingPasswordCompleted(this, new EmrGetEncodingPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroDict() {
            this.Invoke("EmrSynchroDict", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroDictAsync() {
            this.EmrSynchroDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroDictAsync(object userState) {
            if ((this.EmrSynchroDictOperationCompleted == null)) {
                this.EmrSynchroDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroDict", new object[0], this.EmrSynchroDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroDictOperationCompleted(object arg) {
            if ((this.EmrSynchroDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroDeptDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroDeptDict() {
            this.Invoke("EmrSynchroDeptDict", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroDeptDictAsync() {
            this.EmrSynchroDeptDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroDeptDictAsync(object userState) {
            if ((this.EmrSynchroDeptDictOperationCompleted == null)) {
                this.EmrSynchroDeptDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroDeptDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroDeptDict", new object[0], this.EmrSynchroDeptDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroDeptDictOperationCompleted(object arg) {
            if ((this.EmrSynchroDeptDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroDeptDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroICDCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroICDCode() {
            this.Invoke("EmrSynchroICDCode", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroICDCodeAsync() {
            this.EmrSynchroICDCodeAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroICDCodeAsync(object userState) {
            if ((this.EmrSynchroICDCodeOperationCompleted == null)) {
                this.EmrSynchroICDCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroICDCodeOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroICDCode", new object[0], this.EmrSynchroICDCodeOperationCompleted, userState);
        }
        
        private void OnEmrSynchroICDCodeOperationCompleted(object arg) {
            if ((this.EmrSynchroICDCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroICDCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroBedDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroBedDict(string strDeptCode) {
            this.Invoke("EmrSynchroBedDict", new object[] {
                        strDeptCode});
        }
        
        /// <remarks/>
        public void EmrSynchroBedDictAsync(string strDeptCode) {
            this.EmrSynchroBedDictAsync(strDeptCode, null);
        }
        
        /// <remarks/>
        public void EmrSynchroBedDictAsync(string strDeptCode, object userState) {
            if ((this.EmrSynchroBedDictOperationCompleted == null)) {
                this.EmrSynchroBedDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroBedDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroBedDict", new object[] {
                        strDeptCode}, this.EmrSynchroBedDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroBedDictOperationCompleted(object arg) {
            if ((this.EmrSynchroBedDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroBedDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOperationCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroOperationCode() {
            this.Invoke("EmrSynchroOperationCode", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroOperationCodeAsync() {
            this.EmrSynchroOperationCodeAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroOperationCodeAsync(object userState) {
            if ((this.EmrSynchroOperationCodeOperationCompleted == null)) {
                this.EmrSynchroOperationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOperationCodeOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOperationCode", new object[0], this.EmrSynchroOperationCodeOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOperationCodeOperationCompleted(object arg) {
            if ((this.EmrSynchroOperationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOperationCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroUsers() {
            this.Invoke("EmrSynchroUsers", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroUsersAsync() {
            this.EmrSynchroUsersAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroUsersAsync(object userState) {
            if ((this.EmrSynchroUsersOperationCompleted == null)) {
                this.EmrSynchroUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroUsersOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroUsers", new object[0], this.EmrSynchroUsersOperationCompleted, userState);
        }
        
        private void OnEmrSynchroUsersOperationCompleted(object arg) {
            if ((this.EmrSynchroUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroAdtLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroAdtLog() {
            this.Invoke("EmrSynchroAdtLog", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroAdtLogAsync() {
            this.EmrSynchroAdtLogAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroAdtLogAsync(object userState) {
            if ((this.EmrSynchroAdtLogOperationCompleted == null)) {
                this.EmrSynchroAdtLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroAdtLogOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroAdtLog", new object[0], this.EmrSynchroAdtLogOperationCompleted, userState);
        }
        
        private void OnEmrSynchroAdtLogOperationCompleted(object arg) {
            if ((this.EmrSynchroAdtLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroAdtLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroNewPat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroNewPat(string nDeptID) {
            this.Invoke("EmrSynchroNewPat", new object[] {
                        nDeptID});
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatAsync(string nDeptID) {
            this.EmrSynchroNewPatAsync(nDeptID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatAsync(string nDeptID, object userState) {
            if ((this.EmrSynchroNewPatOperationCompleted == null)) {
                this.EmrSynchroNewPatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroNewPatOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroNewPat", new object[] {
                        nDeptID}, this.EmrSynchroNewPatOperationCompleted, userState);
        }
        
        private void OnEmrSynchroNewPatOperationCompleted(object arg) {
            if ((this.EmrSynchroNewPatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroNewPatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOnePat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroOnePat(string strInpNo, string strMrDept, string strRDoctor) {
            this.Invoke("EmrSynchroOnePat", new object[] {
                        strInpNo,
                        strMrDept,
                        strRDoctor});
        }
        
        /// <remarks/>
        public void EmrSynchroOnePatAsync(string strInpNo, string strMrDept, string strRDoctor) {
            this.EmrSynchroOnePatAsync(strInpNo, strMrDept, strRDoctor, null);
        }
        
        /// <remarks/>
        public void EmrSynchroOnePatAsync(string strInpNo, string strMrDept, string strRDoctor, object userState) {
            if ((this.EmrSynchroOnePatOperationCompleted == null)) {
                this.EmrSynchroOnePatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOnePatOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOnePat", new object[] {
                        strInpNo,
                        strMrDept,
                        strRDoctor}, this.EmrSynchroOnePatOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOnePatOperationCompleted(object arg) {
            if ((this.EmrSynchroOnePatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOnePatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroNewPatMZ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroNewPatMZ(string nDeptID, string strCurrentDate) {
            this.Invoke("EmrSynchroNewPatMZ", new object[] {
                        nDeptID,
                        strCurrentDate});
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatMZAsync(string nDeptID, string strCurrentDate) {
            this.EmrSynchroNewPatMZAsync(nDeptID, strCurrentDate, null);
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatMZAsync(string nDeptID, string strCurrentDate, object userState) {
            if ((this.EmrSynchroNewPatMZOperationCompleted == null)) {
                this.EmrSynchroNewPatMZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroNewPatMZOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroNewPatMZ", new object[] {
                        nDeptID,
                        strCurrentDate}, this.EmrSynchroNewPatMZOperationCompleted, userState);
        }
        
        private void OnEmrSynchroNewPatMZOperationCompleted(object arg) {
            if ((this.EmrSynchroNewPatMZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroNewPatMZCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOutPat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroOutPat(string nDeptID) {
            this.Invoke("EmrSynchroOutPat", new object[] {
                        nDeptID});
        }
        
        /// <remarks/>
        public void EmrSynchroOutPatAsync(string nDeptID) {
            this.EmrSynchroOutPatAsync(nDeptID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroOutPatAsync(string nDeptID, object userState) {
            if ((this.EmrSynchroOutPatOperationCompleted == null)) {
                this.EmrSynchroOutPatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOutPatOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOutPat", new object[] {
                        nDeptID}, this.EmrSynchroOutPatOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOutPatOperationCompleted(object arg) {
            if ((this.EmrSynchroOutPatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOutPatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderTypeDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderTypeDict() {
            object[] results = this.Invoke("EmrGetOrderTypeDict", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderTypeDictAsync() {
            this.EmrGetOrderTypeDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrGetOrderTypeDictAsync(object userState) {
            if ((this.EmrGetOrderTypeDictOperationCompleted == null)) {
                this.EmrGetOrderTypeDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderTypeDictOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderTypeDict", new object[0], this.EmrGetOrderTypeDictOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderTypeDictOperationCompleted(object arg) {
            if ((this.EmrGetOrderTypeDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderTypeDictCompleted(this, new EmrGetOrderTypeDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderItemDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderItemDict(string strOrderTypeCode) {
            object[] results = this.Invoke("EmrGetOrderItemDict", new object[] {
                        strOrderTypeCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderItemDictAsync(string strOrderTypeCode) {
            this.EmrGetOrderItemDictAsync(strOrderTypeCode, null);
        }
        
        /// <remarks/>
        public void EmrGetOrderItemDictAsync(string strOrderTypeCode, object userState) {
            if ((this.EmrGetOrderItemDictOperationCompleted == null)) {
                this.EmrGetOrderItemDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderItemDictOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderItemDict", new object[] {
                        strOrderTypeCode}, this.EmrGetOrderItemDictOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderItemDictOperationCompleted(object arg) {
            if ((this.EmrGetOrderItemDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderItemDictCompleted(this, new EmrGetOrderItemDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderDataSet() {
            object[] results = this.Invoke("EmrGetOrderDataSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetAsync() {
            this.EmrGetOrderDataSetAsync(null);
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetAsync(object userState) {
            if ((this.EmrGetOrderDataSetOperationCompleted == null)) {
                this.EmrGetOrderDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderDataSetOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderDataSet", new object[0], this.EmrGetOrderDataSetOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderDataSetOperationCompleted(object arg) {
            if ((this.EmrGetOrderDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderDataSetCompleted(this, new EmrGetOrderDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderDataSetByPatentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderDataSetByPatentID(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetOrderDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetByPatentIDAsync(string strPatientID, int intVisitID) {
            this.EmrGetOrderDataSetByPatentIDAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetByPatentIDAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetOrderDataSetByPatentIDOperationCompleted == null)) {
                this.EmrGetOrderDataSetByPatentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderDataSetByPatentIDOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetOrderDataSetByPatentIDOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderDataSetByPatentIDOperationCompleted(object arg) {
            if ((this.EmrGetOrderDataSetByPatentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderDataSetByPatentIDCompleted(this, new EmrGetOrderDataSetByPatentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatOrder(string strPatientId, int nVisitId) {
            this.Invoke("EmrSynchroPatOrder", new object[] {
                        strPatientId,
                        nVisitId});
        }
        
        /// <remarks/>
        public void EmrSynchroPatOrderAsync(string strPatientId, int nVisitId) {
            this.EmrSynchroPatOrderAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatOrderAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.EmrSynchroPatOrderOperationCompleted == null)) {
                this.EmrSynchroPatOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatOrderOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatOrder", new object[] {
                        strPatientId,
                        nVisitId}, this.EmrSynchroPatOrderOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatOrderOperationCompleted(object arg) {
            if ((this.EmrSynchroPatOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatTotalPayMents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatTotalPayMents() {
            this.Invoke("EmrSynchroPatTotalPayMents", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroPatTotalPayMentsAsync() {
            this.EmrSynchroPatTotalPayMentsAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatTotalPayMentsAsync(object userState) {
            if ((this.EmrSynchroPatTotalPayMentsOperationCompleted == null)) {
                this.EmrSynchroPatTotalPayMentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatTotalPayMentsOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatTotalPayMents", new object[0], this.EmrSynchroPatTotalPayMentsOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatTotalPayMentsOperationCompleted(object arg) {
            if ((this.EmrSynchroPatTotalPayMentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatTotalPayMentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatBasicInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatBasicInfo(string patientID, string visitID) {
            this.Invoke("EmrSynchroPatBasicInfo", new object[] {
                        patientID,
                        visitID});
        }
        
        /// <remarks/>
        public void EmrSynchroPatBasicInfoAsync(string patientID, string visitID) {
            this.EmrSynchroPatBasicInfoAsync(patientID, visitID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatBasicInfoAsync(string patientID, string visitID, object userState) {
            if ((this.EmrSynchroPatBasicInfoOperationCompleted == null)) {
                this.EmrSynchroPatBasicInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatBasicInfoOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatBasicInfo", new object[] {
                        patientID,
                        visitID}, this.EmrSynchroPatBasicInfoOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatBasicInfoOperationCompleted(object arg) {
            if ((this.EmrSynchroPatBasicInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatBasicInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetLabDataSetByPatentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetLabDataSetByPatentID(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetLabDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetLabDataSetByPatentIDAsync(string strPatientID, int intVisitID) {
            this.EmrGetLabDataSetByPatentIDAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetLabDataSetByPatentIDAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetLabDataSetByPatentIDOperationCompleted == null)) {
                this.EmrGetLabDataSetByPatentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetLabDataSetByPatentIDOperationCompleted);
            }
            this.InvokeAsync("EmrGetLabDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetLabDataSetByPatentIDOperationCompleted, userState);
        }
        
        private void OnEmrGetLabDataSetByPatentIDOperationCompleted(object arg) {
            if ((this.EmrGetLabDataSetByPatentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetLabDataSetByPatentIDCompleted(this, new EmrGetLabDataSetByPatentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetLabReportDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetLabReportDataSet(string strTestNO) {
            object[] results = this.Invoke("EmrGetLabReportDataSet", new object[] {
                        strTestNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetLabReportDataSetAsync(string strTestNO) {
            this.EmrGetLabReportDataSetAsync(strTestNO, null);
        }
        
        /// <remarks/>
        public void EmrGetLabReportDataSetAsync(string strTestNO, object userState) {
            if ((this.EmrGetLabReportDataSetOperationCompleted == null)) {
                this.EmrGetLabReportDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetLabReportDataSetOperationCompleted);
            }
            this.InvokeAsync("EmrGetLabReportDataSet", new object[] {
                        strTestNO}, this.EmrGetLabReportDataSetOperationCompleted, userState);
        }
        
        private void OnEmrGetLabReportDataSetOperationCompleted(object arg) {
            if ((this.EmrGetLabReportDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetLabReportDataSetCompleted(this, new EmrGetLabReportDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetLabItemResultQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetLabItemResultQuery(string strPatientID, int intVisitID, string strReportItem) {
            object[] results = this.Invoke("EmrGetLabItemResultQuery", new object[] {
                        strPatientID,
                        intVisitID,
                        strReportItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetLabItemResultQueryAsync(string strPatientID, int intVisitID, string strReportItem) {
            this.EmrGetLabItemResultQueryAsync(strPatientID, intVisitID, strReportItem, null);
        }
        
        /// <remarks/>
        public void EmrGetLabItemResultQueryAsync(string strPatientID, int intVisitID, string strReportItem, object userState) {
            if ((this.EmrGetLabItemResultQueryOperationCompleted == null)) {
                this.EmrGetLabItemResultQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetLabItemResultQueryOperationCompleted);
            }
            this.InvokeAsync("EmrGetLabItemResultQuery", new object[] {
                        strPatientID,
                        intVisitID,
                        strReportItem}, this.EmrGetLabItemResultQueryOperationCompleted, userState);
        }
        
        private void OnEmrGetLabItemResultQueryOperationCompleted(object arg) {
            if ((this.EmrGetLabItemResultQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetLabItemResultQueryCompleted(this, new EmrGetLabItemResultQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetExamMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetExamMaster(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetExamMaster", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetExamMasterAsync(string strPatientID, int intVisitID) {
            this.EmrGetExamMasterAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetExamMasterAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetExamMasterOperationCompleted == null)) {
                this.EmrGetExamMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetExamMasterOperationCompleted);
            }
            this.InvokeAsync("EmrGetExamMaster", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetExamMasterOperationCompleted, userState);
        }
        
        private void OnEmrGetExamMasterOperationCompleted(object arg) {
            if ((this.EmrGetExamMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetExamMasterCompleted(this, new EmrGetExamMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetExamReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetExamReport(string strExamNO) {
            object[] results = this.Invoke("EmrGetExamReport", new object[] {
                        strExamNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetExamReportAsync(string strExamNO) {
            this.EmrGetExamReportAsync(strExamNO, null);
        }
        
        /// <remarks/>
        public void EmrGetExamReportAsync(string strExamNO, object userState) {
            if ((this.EmrGetExamReportOperationCompleted == null)) {
                this.EmrGetExamReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetExamReportOperationCompleted);
            }
            this.InvokeAsync("EmrGetExamReport", new object[] {
                        strExamNO}, this.EmrGetExamReportOperationCompleted, userState);
        }
        
        private void OnEmrGetExamReportOperationCompleted(object arg) {
            if ((this.EmrGetExamReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetExamReportCompleted(this, new EmrGetExamReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetExamAppoint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetExamAppoint(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetExamAppoint", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetExamAppointAsync(string strPatientID, int intVisitID) {
            this.EmrGetExamAppointAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetExamAppointAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetExamAppointOperationCompleted == null)) {
                this.EmrGetExamAppointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetExamAppointOperationCompleted);
            }
            this.InvokeAsync("EmrGetExamAppoint", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetExamAppointOperationCompleted, userState);
        }
        
        private void OnEmrGetExamAppointOperationCompleted(object arg) {
            if ((this.EmrGetExamAppointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetExamAppointCompleted(this, new EmrGetExamAppointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetGeneralSQL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetGeneralSQL(string strSQL, string strType) {
            object[] results = this.Invoke("EmrGetGeneralSQL", new object[] {
                        strSQL,
                        strType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetGeneralSQLAsync(string strSQL, string strType) {
            this.EmrGetGeneralSQLAsync(strSQL, strType, null);
        }
        
        /// <remarks/>
        public void EmrGetGeneralSQLAsync(string strSQL, string strType, object userState) {
            if ((this.EmrGetGeneralSQLOperationCompleted == null)) {
                this.EmrGetGeneralSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetGeneralSQLOperationCompleted);
            }
            this.InvokeAsync("EmrGetGeneralSQL", new object[] {
                        strSQL,
                        strType}, this.EmrGetGeneralSQLOperationCompleted, userState);
        }
        
        private void OnEmrGetGeneralSQLOperationCompleted(object arg) {
            if ((this.EmrGetGeneralSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetGeneralSQLCompleted(this, new EmrGetGeneralSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGenralDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGenralDataSet(object[] list) {
            object[] results = this.Invoke("EmrGenralDataSet", new object[] {
                        list});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGenralDataSetAsync(object[] list) {
            this.EmrGenralDataSetAsync(list, null);
        }
        
        /// <remarks/>
        public void EmrGenralDataSetAsync(object[] list, object userState) {
            if ((this.EmrGenralDataSetOperationCompleted == null)) {
                this.EmrGenralDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGenralDataSetOperationCompleted);
            }
            this.InvokeAsync("EmrGenralDataSet", new object[] {
                        list}, this.EmrGenralDataSetOperationCompleted, userState);
        }
        
        private void OnEmrGenralDataSetOperationCompleted(object arg) {
            if ((this.EmrGenralDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGenralDataSetCompleted(this, new EmrGenralDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGenralStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGenralStr(object[] list) {
            object[] results = this.Invoke("EmrGenralStr", new object[] {
                        list});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGenralStrAsync(object[] list) {
            this.EmrGenralStrAsync(list, null);
        }
        
        /// <remarks/>
        public void EmrGenralStrAsync(object[] list, object userState) {
            if ((this.EmrGenralStrOperationCompleted == null)) {
                this.EmrGenralStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGenralStrOperationCompleted);
            }
            this.InvokeAsync("EmrGenralStr", new object[] {
                        list}, this.EmrGenralStrOperationCompleted, userState);
        }
        
        private void OnEmrGenralStrOperationCompleted(object arg) {
            if ((this.EmrGenralStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGenralStrCompleted(this, new EmrGenralStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrBackup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrBackup(int nFlag) {
            this.Invoke("EmrBackup", new object[] {
                        nFlag});
        }
        
        /// <remarks/>
        public void EmrBackupAsync(int nFlag) {
            this.EmrBackupAsync(nFlag, null);
        }
        
        /// <remarks/>
        public void EmrBackupAsync(int nFlag, object userState) {
            if ((this.EmrBackupOperationCompleted == null)) {
                this.EmrBackupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrBackupOperationCompleted);
            }
            this.InvokeAsync("EmrBackup", new object[] {
                        nFlag}, this.EmrBackupOperationCompleted, userState);
        }
        
        private void OnEmrBackupOperationCompleted(object arg) {
            if ((this.EmrBackupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrBackupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void TestDBConnectionCompletedEventHandler(object sender, TestDBConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestDBConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestDBConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrAccountValidateCompletedEventHandler(object sender, EmrAccountValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrAccountValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrAccountValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetEncodingPasswordCompletedEventHandler(object sender, EmrGetEncodingPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetEncodingPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetEncodingPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroDeptDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroICDCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroBedDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroOperationCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroAdtLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroNewPatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroOnePatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroNewPatMZCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroOutPatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetOrderTypeDictCompletedEventHandler(object sender, EmrGetOrderTypeDictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderTypeDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderTypeDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetOrderItemDictCompletedEventHandler(object sender, EmrGetOrderItemDictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderItemDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderItemDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetOrderDataSetCompletedEventHandler(object sender, EmrGetOrderDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetOrderDataSetByPatentIDCompletedEventHandler(object sender, EmrGetOrderDataSetByPatentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderDataSetByPatentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderDataSetByPatentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroPatOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroPatTotalPayMentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrSynchroPatBasicInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetLabDataSetByPatentIDCompletedEventHandler(object sender, EmrGetLabDataSetByPatentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetLabDataSetByPatentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetLabDataSetByPatentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetLabReportDataSetCompletedEventHandler(object sender, EmrGetLabReportDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetLabReportDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetLabReportDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetLabItemResultQueryCompletedEventHandler(object sender, EmrGetLabItemResultQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetLabItemResultQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetLabItemResultQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetExamMasterCompletedEventHandler(object sender, EmrGetExamMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetExamMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetExamMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetExamReportCompletedEventHandler(object sender, EmrGetExamReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetExamReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetExamReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetExamAppointCompletedEventHandler(object sender, EmrGetExamAppointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetExamAppointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetExamAppointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGetGeneralSQLCompletedEventHandler(object sender, EmrGetGeneralSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetGeneralSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetGeneralSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGenralDataSetCompletedEventHandler(object sender, EmrGenralDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGenralDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGenralDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrGenralStrCompletedEventHandler(object sender, EmrGenralStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGenralStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGenralStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EmrBackupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591